AULA 1 - VERSIONAMENTO DE CÓDIGO
#O git é uma ferramenta de versionamento de código.
#O versionamento de código é importante para o controle e gerenciamento de um projeto de software, onde à diversas alterações.
#Podemos utilizar o git com #Github, #gitlab ou #gitbucket


AULA 2 - O QUE É O GIT?
#O git é basicamente um sistema de controle de versões. Atualmente ele é o mais utilizado do mundo.
#O git é baseado em repositórios, que contém todas as versões do código armazenado
#O git é um projeto de código aberto


ErroComum de principiante: O git não é o github ou gitlab ou gitbucket, o git é uma ferramenta de versionamento de código.
O github ou gitlab é uma plataforma que armazena os projetos com versionamento git. 

AULA 3 - O QUE É UM REPOSITORIO?
#Um repositório é um local onde é armazenado o codigo.

AULA 4 - O QUE É O GITHUB?
#O github é uma plataforma de gerenciamento de repositórios.
        #Comando que aprendemos é o "git init". O "git init" inicia um projeto git para podermos versionar no projeto.

AULA 5 - USANDO GIT STATUS
#O "git status" é um comando que verifica o status do seu projeto local (que está na sua maquina). Caso o projeto tenha ganhado modificações, o git status
irá apresentar o nome do arquivo ou pasta como "untracked" ou "modified"

AULA 6 - uSANDO O GIT ADD
#O "git add" é um comando utilizado para adicionar arquivos novos ao projeto utilizado.
#Podemos adicionar de duas formas:
    @ UM ARQUIVO ESPECIFICO: git add (nome do arquivo) Ex: git add index.html
    ou
    @ TODOS OS ARQUIVOS DE UMA SÓ VEZ: git add .

AULA 7 - USANDO O GIT COMMIT
#O "git commit" é um comando para "embalar/preparar" tudo que foi adicionado pelo "git add" para o envio no repo remoto
# o comando funciona da seguinte forma "git commit", podemos enviar um arquivo somente ou podemos enviar tudo que já adicionamos com
"git commit -a -m "(- m significa mensage, um plus para enviar uma mensagem para saber do que se trata esse commit)"

AULA 8 - USANDO O GIT PUSH
#O git push serve para enviar o que foi alterado pelo projeto local a repo remoto. Depois de:

Usar o "git status" para ver o que está sendo alterado, o que foi, ou não adicionado.
Usar o "git add" para adicionar os arquivos alterados
Usar o "git commit" para preparar o envio dos arquivos adicionados
É possivel usar o "git push" para enviar o código


